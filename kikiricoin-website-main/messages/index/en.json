{
  "meta": {
    "locale": "en_US",
    "description": "KikiriCoin (KIKI) is an ERC-20 token deployed on the Polygon blockchain network. Its implementation is open source and meant to be educational and fun."
  },
  "LanguagesMenu": {
    "buttonLabel": "Language"
  },
  "Hero": {
    "logoAlt": "Logo",
    "logoBackgroundAlt": "Background Logo",
    "funnySubtitle": "<i>Kikirikí</i> said the rooster, and the KIKI token was born.",
    "subtitle": "KikiriCoin (KIKI) is an ERC-20 token deployed on the Polygon blockchain network. Its implementation is open source and meant to be educational and fun.",
    "learnMoreButton": "Learn More",
    "viewSourceCodeButton": "View Source Code"
  },
  "Stats": {
    "totalSupply": "Current Total Supply",
    "deploymentDate": "Deployment Date",
    "dateLocale": "en",
    "maxCap": "Maximum Supply Cap",
    "transferCount": "KikiriCoin Transfers"
  },
  "FeaturesSplit": {
    "KikiriCoin": {
      "title": "What is KikiriCoin?",
      "description": {
        "0": "KikiriCoin is a virtual token that can be created (minted) and transferred between crypto accounts.",
        "1": "KikiriCoin's allowed operations and balances are managed by a <b>smart contract</b>."
      },
      "imageDescription": "KikiriCoin logo"
    },
    "SmartContract": {
      "title": "What is a smart contract?",
      "description": {
        "0": "A short computer program that is executed in a blockchain network. Smart contracts deployed on Ethereum, Polygon, and many other networks are developed with the programming language Solidity.",
        "1": "The token is implemented using the ERC-20 interface. This standard makes KikiriCoin compatible with any system that supports Ethereum tokens."
      },
      "imageDescription": "Ethereum logo"
    },
    "Web3js": {
      "title": "How does this website interact with KikiriCoin?",
      "description": {
        "0": "This website uses Web3.js, a JavaScript client to interact with blockchain via Alchemy.",
        "1": "Alchemy is a service that enables connecting with nodes of the blockchain network. Thanks to that, we don't have to maintain our own infrastructure of blockchain nodes."
      },
      "imageDescription": "Web3.js logo",
      "links": {
        "0": "Web3.js library"
      }
    },
    "MetaMask": {
      "title": "What is MetaMask?",
      "description": {
        "0": "MetaMask is a software cryptocurrency wallet used to interact with the Ethereum blockchain. It allows users to access their Ethereum accounts through a browser extension or mobile app, which can then be used to interact with decentralized applications like this website.",
        "1": "MetaMask and websites like this one can connect to offer friendly interfaces for users to interact with smart contracts."
      },
      "imageDescription": "MetaMask logo",
      "links": {
        "0": "MetaMask Official Site"
      }
    },
    "PolygonNetwork": {
      "title": "Where is KikiriCoin deployed?",
      "description": {
        "0": "KikiriCoin's smart contract is deployed on the <b>Polygon blockchain network</b>. Polygon is a scaling solution for Ethereum that provides faster and cheaper transactions on Ethereum.",
        "1": "Polygon uses the cryptocurrency <b>MATIC</b> to charge users for executing transactions and reward transaction validators around the world.",
        "2": "MetaMask can also connect to the Polygon network, and therefore show account balances and sign transactions."
      },
      "imageDescription": "MATIC logo",
      "links": {
        "0": "Polygon Official Site",
        "1": "Add Polygon Network to MetaMask"
      }
    },
    "MATIC": {
      "title": "How to get MATIC?",
      "description": {
        "0": "When a user wants to execute a transaction on Polygon, like to get some KikiriCoins, they'll need to have some MATIC token in their account.",
        "1": "The easiest and fastest way to get it is using <b>MoonPay</b>. Instructions:"
      },
      "getMaticInstructions": [
        "Set up the MetaMask extension.",
        "<a>Add the Polygon network to MetaMask.</a>",
        "Use MoonPay to purchase \"<b>MATIC - Polygon (Polygon)</b>\" directly to your MetaMask account."
      ],
      "getMaticNote": "It should take only a few minutes to do it. Unfortunately, the minimum purchase is $30 plus fee.",
      "imageDescription": "MATIC logo"
    }
  },
  "Error": {
    "errorMessage": "Error message",
    "totalSupplyError": "Error fetching total supply",
    "maxCapError": "Error fetching max cap",
    "transactionCountError": "Error fetching transaction count",
    "importTokenError": "Error importing token to account",
    "connectError": "Error connecting to account",
    "claimError": "Error claiming",
    "refreshStatsError": "Error loading faucet counts"
  },
  "Faucet": {
    "title": "Faucet",
    "description": {
      "0": "A faucet is a dispenser of token. It's a common approach to distribute new tokens.",
      "1": "In order to use it, you'll need to connect your wallet and initiate a transaction to claim the tokens. The buttons below will handle it.",
      "2": "Like any other transaction in the Polygon network, it will require a small amount of MATIC token. When you press Claim, MetaMask will display the estimated transaction cost and ask for confirmation. The claim operation should require less than 0.001 MATIC (~0.02€).",
      "3": "This faucet allows you to request tokens every 5 minutes. You'll receive an error notification if you try again without waiting."
    },
    "metamaskMissing": {
      "errorMessage": "Crypto wallet not found. Do you have MetaMask installed and enabled?",
      "installLink": "Install MetaMask"
    },
    "wrongChain": {
      "errorMessage": "Your digital wallet isn't connected to the Polygon Mainnet blockchain. Disconnect, switch chain, and reconnect.",
      "expected": "Expected",
      "actual": "Actual"
    },
    "issues": {
      "questionText": "Having trouble?",
      "reportIssueLink": "Report issue on GitHub"
    },
    "emptyFaucetMessage": "The faucet is now empty. Report an issue with the link below to ask the owner for minting new tokens.",
    "connectButton": "1. Connect Wallet",
    "connecting": "1. Connecting",
    "alreadyConnected": "Already connected to",
    "importTokenButton": "2. Import KikiriCoin token to MetaMask",
    "claimButton": "3. Claim 10 KikiriCoin",
    "claiming": "3. Claiming 10 KikiriCoin",
    "totalTimesUsed": "Total Times Used",
    "tokensAvailable": "KikiriCoin Tokens Available",
    "tokensInWallet": "KikiriCoin Tokens in your Wallet"
  },
  "SourceCode": {
    "sourceCodeTitle": "Source Code",
    "smartContractsRepo": "Smart Contracts",
    "websiteRepo": "Website (this page)",
    "deployedContractsTitle": "Deployed Contracts",
    "tokenSmartContract": "Token Smart Contract",
    "faucetSmartContract": "Faucet Smart Contract"
  },
  "LearningResources": {
    "title": "Learning Resources",
    "CryptoZombies": {
      "title": "CryptoZombies Courses",
      "description": "This is how I got started in blockchain development. The lessons are clear, very educational, and fun. The Solidity version used is a bit out of date (0.5), but most of the content is still accurate with Solidity 0.8",
      "imageDescription": "Crypto Zombie"
    },
    "TokenDevelopmentGuide": {
      "title": "How To Develop A Cryptocurrency - The Complete Guide (2022)",
      "description": "Vittorio explains how to make an ERC-20 token leveraging implementations from OpenZeppelin, and deploy it to Polygon Network. This is pretty much the main resource that guided me while developing KikiriCoin.",
      "imageDescription": "Tutorial thumbnail"
    },
    "AyusoCoin": {
      "title": "A¥USOCoin - Una iniciativa para que nuestros políticos aprendan qué son las criptomonedas y los contratos inteligentes (Spanish)",
      "description": "Íñigo developed an ERC-20 token without leveraging OpenZeppelin, which makes the implementation very explicit and a great learning resource. The smart contracts have plenty of comments (in Spanish) that helped me learn new concepts.",
      "imageDescription": "AyusoCoin icon"
    },
    "WhiteboardCrypto": {
      "title": "Whiteboard Crypto - YouTube channel for crypto education using analogies, stories, and examples",
      "description": "When I need to learn about a concept, before diving into technical articles, I start with WhiteBoard Crypto. This channel has helped me a lot to understand complex crypto concepts.",
      "imageDescription": "Whiteboard Crypto icon"
    }
  },
  "Footer": {
    "authorWebsiteLink": "Author's website, Guillermo de la Puente",
    "logoAttributionText": "The KikiriCoin logo is the",
    "logoAttributionLink": "Rooster emoji on Google Android 9.0"
  },
  "ClaimSuccessModal": {
    "title": "Claimed!",
    "description": {
      "0": "Transaction submitted. 10 KikiriCoins will be added to your account soon. The transaction can take 1-2 minutes.",
      "1": "Thank you!"
    },
    "imageDescription": "Logo"
  }
}
